import SwiftUI
import FirebaseFunctions

class DeliveryDetailViewModel: ObservableObject {
    private let functions = Functions.functions()

    func sendSmsCode(orderId: String) {
        let data: [String: Any] = ["orderId": orderId]
        functions.httpsCallable("sendSmsCode").call(data) { result, error in
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS-–∫–æ–¥–∞: \(error.localizedDescription)")
            } else {
                print("üì≤ SMS-–∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ \(orderId)")
            }
        }
    }

    func markDelivered(orderId: String, smsCode: String) {
        let data: [String: Any] = ["orderId": orderId, "smsCode": smsCode]
        functions.httpsCallable("confirmSmsCode").call(data) { result, error in
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏: \(error.localizedDescription)")
            } else {
                print("‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ \(orderId)")
            }
        }
    }
}

struct DeliveryDetailView: View {
    let orderId: String
    @StateObject private var viewModel = DeliveryDetailViewModel()

    @State private var showSmsAlert = false
    @State private var smsCode = ""

    var body: some View {
        VStack(spacing: 20) {
            Text("–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ \(orderId)")
                .font(.title2)

            Button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É SMS-–∫–æ–¥") {
                viewModel.sendSmsCode(orderId: orderId)
            }
            .font(.headline)
            .padding()
            .frame(maxWidth: .infinity)
            .background(Color.kaspiBlue)
            .foregroundColor(.white)
            .cornerRadius(12)

            Button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É") {
                showSmsAlert = true
            }
            .font(.headline)
            .padding()
            .frame(maxWidth: .infinity)
            .background(Color.brandGreen)
            .foregroundColor(.white)
            .cornerRadius(12)
            .alert("–í–≤–µ–¥–∏—Ç–µ SMS-–∫–æ–¥", isPresented: $showSmsAlert) {
                TextField("0000", text: $smsCode)
                    .keyboardType(.numberPad)
                Button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å") {
                    viewModel.markDelivered(orderId: orderId, smsCode: smsCode)
                    smsCode = ""
                }
                Button("–û—Ç–º–µ–Ω–∞", role: .cancel) {}
            }
        }
        .padding()
        .navigationTitle("–î–æ—Å—Ç–∞–≤–∫–∞")
    }
}

struct DeliveryDetailView_Previews: PreviewProvider {
    static var previews: some View {
        NavigationView {
            DeliveryDetailView(orderId: "123456")
        }
    }
}
